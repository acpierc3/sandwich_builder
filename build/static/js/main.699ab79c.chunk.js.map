{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Ox/Ox.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Bacon","SideDrawer","Open","Close","Logo","BuildControl","Label","Less","More","Toolbar","DesktopOnly","NavigationItems","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","DrawerToggle","Backdrop","Burger","Modal","Loader","load2","CheckoutSummary","ContactData","Order","aux","props","children","logo","react_default","a","createElement","className","classes","style","height","src","burgerLogo","alt","navigationItems","NavLink","exact","to","activeClassName","drawerToggle","onClick","toolbar","sideDrawerHandler","backdrop","show","cancel","sideDrawer","attachedClasses","pop","push","Ox","join","Layout","state","showSideDrawer","_this","setState","prevState","this","Component","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","ingred","ingredReturn","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","elem","concat","length","buildControl","label","e","onRemoveIngred","disabled","disabledInfo","onAddIngred","controls","buildControls","totalPrice","toFixed","ctrl","purchasable","onPurchase","nextProps","nextState","console","log","transform","opacity","button","clicked","OrderSummary","ingredientSummary","entries","textTransform","price","clickCancel","clickContinue","spinner","withErrorHandler","WrappedComponent","axios","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","UI_Modal_Modal","message","instance","create","baseURL","BurgerBuilder","purchasing","loading","purchaseContinueHandler","history","updatePurchasable","igKey","sum","objectSpread","ingreds","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","Burger_OrderSummary_OrderSummary","connect","dispatch","ingName","ingredientName","checkoutSummary","width","margin","onCheckoutCancel","onCheckoutContinue","name","email","address","street","postalCode","onOrder","event","preventDefault","order","customer","zipCode","country","deliveryMethod","post","then","catch","form","placeholder","Checkout","goBack","replace","query","URLSearchParams","location","search","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","param","err","return","Route","path","match","component","amount","ingredientOutput","ingies","display","border","padding","orders","get","fetchedOrders","data","id","App","hoc_Layout_Layout","Switch","Orders","Boolean","window","hostname","initialState","lettuce","bacon","cheese","meat","INGREDIENT_PRICES","reducer","action","defineProperty","store","createStore","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.699ab79c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1ClYF\",\"BreadTop\":\"BurgerIngredient_BreadTop__VsuW9\",\"Seeds1\":\"BurgerIngredient_Seeds1__1TLEE\",\"Seeds2\":\"BurgerIngredient_Seeds2__2dSO-\",\"Meat\":\"BurgerIngredient_Meat__ZSDjQ\",\"Cheese\":\"BurgerIngredient_Cheese__3Gkql\",\"Lettuce\":\"BurgerIngredient_Lettuce__27KGL\",\"Bacon\":\"BurgerIngredient_Bacon__3SFxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__qaSfK\",\"Open\":\"SideDrawer_Open__1nSYV\",\"Close\":\"SideDrawer_Close__3jSJd\",\"Logo\":\"SideDrawer_Logo__3R3NU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2BISx\",\"Label\":\"BuildControl_Label__1-YYe\",\"Less\":\"BuildControl_Less__3dAWW\",\"More\":\"BuildControl_More__a8pGr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2zSXj\",\"Logo\":\"Toolbar_Logo__2TGjU\",\"DesktopOnly\":\"Toolbar_DesktopOnly__26LZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1MMlJ\",\"active\":\"NavigationItems_active__2y0wm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3ZE2b\",\"OrderButton\":\"BuildControls_OrderButton__33km1\",\"enable\":\"BuildControls_enable__3XUem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1ggoM\",\"Success\":\"Button_Success__3mrxQ\",\"Danger\":\"Button_Danger__1egGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3zHvW\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1MQUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1Djsq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3XHHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__ZK4RO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1W5PZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2GZ5h\",\"load2\":\"Spinner_load2__2hz7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1FYZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1Ov73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Tg4f\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css'\r\n                                                        //height: props.height is a way of dynamically setting sizing of a reusable element\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItems.module.css'\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <li><NavLink exact to='/' activeClassName={classes.active}>Burger Builder</NavLink></li>\r\n        <li><NavLink to='/orders' activeClassName={classes.active}>Orders</NavLink></li>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n// import Logo from '../../../Logo/Logo';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.onClick}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle onClick={props.sideDrawerHandler} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    <div>\r\n        {props.show ? <div className={classes.Backdrop} onClick={props.cancel}></div> : null}\r\n    </div>\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport classes from './SideDrawer.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Ox/Ox';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.show) {\r\n        attachedClasses.pop()\r\n        attachedClasses.push(classes.Open);\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.show} cancel={props.cancel} />\r\n            <div className={attachedClasses.join(\" \")}>\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../Ox/Ox';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer}      //this is the clean way of toggling based on previous state, due to the asynchronous nature of setState\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar sideDrawerHandler={this.sideDrawerHandler} />\r\n                <SideDrawer \r\n                    show={this.state.showSideDrawer} \r\n                    cancel={this.sideDrawerHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css'\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('lettuce'):\r\n                ingredient = <div className={classes.Lettuce}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\nimport classes from './Burger.module.css';\r\n\r\nconst burger = ( props ) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients)   //transforms state, which is an Object, into an array of the burger ingredients\r\n        .map(ingred => {\r\n\r\n            let ingredReturn = [];\r\n\r\n            for (let i = 1; i <= props.ingredients[ingred]; i++) {  //loops to add the correct number of ingredients to a 2nd dimensional array\r\n                ingredReturn.push(<BurgerIngredient key={ingred + i} type={ingred} />)\r\n            }\r\n            return ingredReturn;\r\n        })\r\n        .reduce((arr, elem) => {                        //this bit of code \"flattens\" the 2D array into a 1D array\r\n            return arr.concat(elem)\r\n        }, []);                                         //initial value is an empty array for the null case\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Add some ingredients!</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = ( props ) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            className={classes.Less} \r\n            onClick={(e) => props.onRemoveIngred(props.type,e)}\r\n            disabled={props.disabledInfo}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={(e) => props.onAddIngred(props.type,e)}>More</button>\r\n    </div>\r\n\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport BuildControl from './BuildControl/BuildControl'\r\nimport classes from './BuildControls.module.css';\r\n\r\nconst controls = [\r\n    {label:\"Lettuce\", type:\"lettuce\"},\r\n    {label:\"Bacon\", type:\"bacon\"},\r\n    {label:\"Cheese\", type:\"cheese\"},\r\n    {label:\"Meat\", type:\"meat\"},\r\n];\r\n\r\nconst buildControls = ( props ) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: $<strong>{props.totalPrice.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label={ctrl.label} \r\n                type={ctrl.type} \r\n                onAddIngred={props.onAddIngred} \r\n                onRemoveIngred={props.onRemoveIngred}\r\n                disabledInfo={props.disabledInfo[ctrl.type]} />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton} \r\n            disabled={!props.purchasable}\r\n            onClick={props.onPurchase}>ORDER THIS BURG</button>\r\n    </div>\r\n\r\n);\r\n\r\nexport default buildControls;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css'\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate (nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        console.log('[Modal] will update')\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <div \r\n            className={classes.Modal}\r\n            style={{\r\n                transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: this.props.show ? '1': '0'\r\n            }}>\r\n            {this.props.children}\r\n        </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => (\r\n    <button\r\n        className={[classes.Button, classes[props.type]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Ox/Ox';\r\nimport Button from '../../UI/Button/Button';\r\n// import classes from './OrderSummary.module.css'\r\n\r\nclass OrderSummary extends Component {\r\n    //this could easily be a functional component, should update\r\n    componentWillUpdate() {\r\n        console.log('[OrderSummary] Will Update');\r\n    }\r\n\r\n    render () {\r\n\r\n        const ingredientSummary = Object.entries(this.props.ingredients).map(ingred => (\r\n            <li key={ingred[0]}>\r\n                <span style={{textTransform: 'capitalize'}}>{ingred[0]}</span>: {ingred[1]}\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>An okay burger with these ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button type=\"Danger\" clicked={this.props.clickCancel}>CANCEL</Button>\r\n                <Button type=\"Success\" clicked={this.props.clickContinue}>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n)\r\n    \r\n\r\nexport default spinner","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Ox/Ox';\r\nimport Backdrop from '../../components/UI/Backdrop/Backdrop'\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error:null\r\n        }\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {             //used to set error state to null if there are no errors\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {     //record error if there is one\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {                //removes interceptors when component is no longer mounted so that a bunch of interceptors dont exist after mounting/unmounting multiple components\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error:null});\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        cancel={this.errorConfirmedHandler}>\r\n                        {this.state.error? this.state.error.message : null}\r\n                    </Modal>\r\n                    <Backdrop show={this.state.error} cancel={this.errorConfirmedHandler}/>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-mysandwich.firebaseio.com/'\r\n});\r\nexport default instance","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Ox/Ox';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Backdrop from '../../components/UI/Backdrop/Backdrop';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from'../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\n              \r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        // ingredients: null,\r\n        // totalPrice: 3,\r\n\r\n        // purchasable: false,     \r\n        purchasing: false, //the following are UI based states, and not super important to manage through redux\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    // componentDidMount () {\r\n    //     // axios.get('https://react-mysandwich.firebaseio.com/ingredients.json')\r\n    //     //     .then( res => {\r\n    //     //         this.setState({ingredients: res.data});\r\n    //     //     })\r\n    //     //     .catch(error => {this.setState({error: true})});\r\n    // }\r\n\r\n    onPurchase = () => {\r\n        this.setState({purchasing: !this.state.purchasing});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n\r\n        // const queryParams = [];\r\n        // for (let i in this.props.ingreds) {\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        // }\r\n        // queryParams.push('price=' + this.state.totalPrice);\r\n        // const queryString = queryParams.join('&');\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    updatePurchasable = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, elem) => {\r\n                return sum + elem;\r\n            })\r\n        \r\n        return sum > 0;\r\n    }\r\n\r\n    //the following functions were used prior to incorporating redux. They are now stored in the reducer.js file\r\n\r\n    // onAddIngred = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const newCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //         ...this.state.ingredients,\r\n\r\n    //     }\r\n    //     updatedIngredients[type] = newCount;\r\n\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + INGREDIENT_PRICES[type];\r\n    //     this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\r\n    //     this.updatePurchasable(updatedIngredients);\r\n    // }\r\n\r\n    // onRemoveIngred = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n        \r\n    //     if(oldCount > 0) {\r\n    //         const newCount = oldCount - 1;\r\n\r\n    //         const updatedIngredients = {\r\n    //             ...this.state.ingredients,\r\n\r\n    //         }\r\n    //         updatedIngredients[type] = newCount;\r\n\r\n    //         const oldPrice = this.state.totalPrice;\r\n    //         const newPrice = oldPrice - INGREDIENT_PRICES[type];\r\n\r\n    //         this.setState({ingredients: updatedIngredients, totalPrice: newPrice})\r\n    //         this.updatePurchasable(updatedIngredients);\r\n    //     }\r\n    // }\r\n\r\n    render () {\r\n\r\n        const disabledInfo = {\r\n            ...this.props.ingreds\r\n        }\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.state.error? <p>Ingredients can't be loaded</p> : <Spinner />;\r\n\r\n        if (this.props.ingreds) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ingreds} />\r\n                    <BuildControls \r\n                        onAddIngred={this.props.onIngredientAdded}\r\n                        onRemoveIngred={this.props.onIngredientRemoved}\r\n                        disabledInfo={disabledInfo}\r\n                        totalPrice={this.props.price}\r\n                        purchasable={this.updatePurchasable(this.props.ingreds)}\r\n                        onPurchase={this.onPurchase} />\r\n                </Aux>\r\n            );\r\n\r\n            orderSummary = <OrderSummary \r\n                ingredients={this.props.ingreds}\r\n                clickContinue={this.purchaseContinueHandler}\r\n                clickCancel={this.onPurchase}\r\n                price={this.props.price}  />;\r\n        }\r\n        if (this.state.loading) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                <Backdrop show={this.state.purchasing} cancel={this.onPurchase} />\r\n                {burger}\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingreds: state.ingredients,\r\n        price: state.totalPrice\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\r\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>Hope it taste good</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button \r\n                type=\"Danger\"\r\n                clicked={props.onCheckoutCancel}>CANCEL</Button>\r\n            <Button\r\n                type=\"Success\"\r\n                clicked={props.onCheckoutContinue}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postalCode: ''\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    onOrder = (event) => {\r\n        event.preventDefault();         //prevents default of sending request and reloading page\r\n\r\n        this.setState({loading: true});\r\n        \r\n        const order = {\r\n            ingredients: this.props.ingreds,\r\n            price: this.props.price,                //in a real setup you would calculate price server-side so as to avoid users manipulating the price\r\n            customer: {\r\n                name: 'NEW',\r\n                address: {\r\n                    street: '21 New Street',\r\n                    zipCode: '12345',\r\n                    country: 'USA'\r\n                },\r\n                email: 'test@test.com'\r\n            },\r\n            deliveryMethod: 'fastest'\r\n        }\r\n        axios.post('/orders.json', order)            //this is the url that is appended to base url in axios-orders.js Will be different for other projects\r\n            .then(response => {\r\n                this.setState({loading: false});\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false});\r\n            })\r\n    }\r\n\r\n\r\n    render () {\r\n        let form = (\r\n            <form>\r\n                <input type=\"text\" name=\"name\" placeholder=\"Your name\" />\r\n                <input type=\"email\" name=\"email\" placeholder=\"Your email\" />\r\n                <input type=\"text\" name=\"street\" placeholder=\"Street\" />\r\n                <input type=\"text\" name=\"postal\" placeholder=\"Postal Code\" />\r\n                <Button type=\"Success\" clicked={this.onOrder}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.state.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingreds: state.ingredients,\r\n        price: state.totalPrice\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    componentWillMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for (let param of query.entries()) {\r\n            //['lettuce', '1']\r\n            if(param[0] === 'price') {\r\n                price = param[1];\r\n            } else {\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n            \r\n        }\r\n        this.setState({ingredients: ingredients, totalPrice: price});\r\n    }\r\n\r\n    onCheckoutCancel = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    onCheckoutContinue = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredients={this.props.ingreds}\r\n                    onCheckoutCancel={this.onCheckoutCancel}\r\n                    onCheckoutContinue={this.onCheckoutContinue} />\r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    component={ContactData} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingreds: state.ingredients,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ingies => {\r\n        if (ingies.amount > 0) {\r\n            return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ingies.name}>{ingies.name} ({ingies.amount})</span>;\r\n        } else {\r\n            return null;\r\n        }\r\n    })\r\n    \r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>${props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {   //can use this instead of componentdidupdate because we will only be seeing this page when orders is clicked, there will be no updating\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({loading: false, orders: fetchedOrders});\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading: false});\r\n            })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order => (\r\n                    <Order \r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={+order.price} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path='/checkout' component={Checkout} />\n            <Route path='/orders' component={Orders} />\n            <Route path='/' exact component={BurgerBuilder} />\n            \n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n//routing using \"exact\" keyword prevents BurgerBuilder from being loaded all the time","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\n\r\nconst initialState = {\r\n    ingredients: {\r\n        lettuce: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n    totalPrice: 4\r\n};\r\n\r\nconst INGREDIENT_PRICES =  {    //typically you name global constants in all caps\r\n    lettuce: 0.4,\r\n    cheese: 0.2,\r\n    meat: 2,\r\n    bacon: 1\r\n}   \r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}